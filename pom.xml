<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>yuown</groupId>
	<artifactId>yuploader</artifactId>
	<version>1.0</version>
	<name>yuploader</name>
	<description>Upload Files to a Dedicated Server through FTP</description>

	<properties>
		<core.version>4.1.6.RELEASE</core.version>
		<context.version>4.1.6.RELEASE</context.version>
		<jdbc.version>4.1.6.RELEASE</jdbc.version>
		<ftp.version>4.1.5.RELEASE</ftp.version>
		<dbcp.version>2.1</dbcp.version>
		<commons.lang3.version>3.4</commons.lang3.version>
		<mysql.version>5.1.35</mysql.version>
		<juneloop.version>1.0</juneloop.version>
		<commons.codec.version>1.10</commons.codec.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${context.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${dbcp.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons.codec.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.3</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>yuown.yuploader.ui.YuploaderApp</mainClass>
							<addClasspath>true</addClasspath>
						</manifest>
						<manifestEntries>
<!-- 							<Permissions>all-permissions</Permissions> -->
<!-- 							<Codebase>https://ovh.optumconnect.com/yuploader/</Codebase> -->
							<Application-Name>yuploader</Application-Name>
<!-- 							<Trusted-Only>false</Trusted-Only> -->
<!-- 							<Trusted-Library>true</Trusted-Library> -->
<!-- 							<Application-Library-Allowable-Codebase>https://ovh.optumconnect.com/yuploader/</Application-Library-Allowable-Codebase> -->
<!-- 							<Caller-Allowable-Codebase>https://ovh.optumconnect.com/yuploader/</Caller-Allowable-Codebase> -->
<!-- 							<Class-Path>lib/</Class-Path> -->
						</manifestEntries>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo.webstart</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<version>1.0-beta-2</version>
				<executions>
					<execution>
						<!-- bind to phase, I prefer to call it manualls -->
						<phase>package</phase>
						<goals>
							<goal>jnlp-inline</goal> <!-- use jnlp, jnlp-inline or jnlp-single as appropriate -->
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--outputDirectory></outputDirectory --> <!-- not required?? -->
					<!-- Set to true to exclude all transitive dependencies. Default is 
						false. -->
					<excludeTransitive>false</excludeTransitive>
					<!-- The path where the libraries are stored within the jnlp structure. 
						not required. by default the libraries are within the working directory -->
<!-- 					<libPath>lib</libPath> -->
					<outputJarVersions>true</outputJarVersions>
					<!-- [optional] transitive dependencies filter - if omitted, all transitive 
						dependencies are included -->
					<dependencies>
						<!-- Note that only groupId and artifactId must be specified here. 
							because of a limitation of the Include/ExcludesArtifactFilter -->
						<!-- <includes> <include>commons-logging:commons-logging</include> 
							<include>commons-cli:commons-cli</include> </includes> -->
						<!-- <excludes> <exclude></exclude> <excludes> -->
					</dependencies>
					<!-- <resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory> -->
					<!-- default value -->
					<!-- JNLP generation -->
					<jnlp>
						<!-- default values -->
						<!--inputTemplateResourcePath>${project.basedir}</inputTemplateResourcePath -->
						<!--inputTemplate>src/main/jnlp/template.vm</inputTemplate --> <!-- relative to inputTemplateResourcePath -->
<!-- 						<outputFile>yuploader.jnlp</outputFile> defaults to launch.jnlp -->
						<!-- used to automatically identify the jar containing the main class. -->
						<!-- this is perhaps going to change -->
						<mainClass>yuown.yuploader.ui.YuploaderApp</mainClass>
					</jnlp>
					<!-- SIGNING -->
					<!-- defining this will automatically sign the jar and its dependencies, 
						if necessary -->
					<sign>
						<keystore>${basedir}/keystore</keystore>
						<keypass>yuploader</keypass>  <!-- we need to override passwords easily from the command line. ${keypass} -->
						<storepass>yuploader</storepass> <!-- ${storepass} -->
						<!--storetype>fillme</storetype -->
						<alias>yuploader</alias>
						<validity>1800</validity>
						<!-- only required for generating the keystore -->
						<dnameCn>yuown</dnameCn>
						<dnameOu>ftp</dnameOu>
						<dnameO>yuown</dnameO>
						<dnameL>web</dnameL>
						<dnameSt>java</dnameSt>
						<dnameC>internet</dnameC>
						<verify>true</verify> <!-- verify that the signing operation succeeded -->
						<!-- KEYSTORE MANAGEMENT -->
						<keystoreConfig>
							<delete>true</delete> <!-- delete the keystore -->
							<gen>true</gen>       <!-- optional shortcut to generate the store. -->
						</keystoreConfig>
					</sign>
					<!-- BUILDING PROCESS -->
<!-- 					<pack200>true</pack200> -->
<!--  					<gzip>true</gzip> default force when pack200 false, true when pack200  selected ?? -->
					<!-- causes a version attribute to be output in each jar resource element, 
						optional, default is false -->
					<outputJarVersions>true</outputJarVersions>
					<!--install>false</install --> <!-- not yet supported -->
					<verbose>false</verbose>
					<makeArchive>true</makeArchive>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>